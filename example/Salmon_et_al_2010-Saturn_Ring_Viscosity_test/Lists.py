###***Create lists (data storage for each bin)***###

r = []              #radius of box
deltaA = []         #Area of box
m = []              #mass in box
sigma = []          #surface mass density
R = []              #Effective r**2 factor for moment of inertia
I = []              #moment of inertia of box
w = []              #orbital speed of box
R_in_RP = []            #Radius in units of the planet
Ncol = []           #Number of collisions with Mars in timestep
vesc = []           #Escape speed b/w Mars and impactor
vsw = []            #Swarm speed (relative speed) b/w "
v = []              #Collision speed b/w "
probability = []    #Distribution for probability a box will be hit
nu = []             #Viscosity value
signew = []         #New surface mass density
u = []              #Used in visc_spread routine
delm = []           #Used in Disk_Restructure
w_new = []          #Used in Disk_Restructure
Mass_to_Mars = []   #Mass accreted to Mars for each timestep n
DiskSum = []
MarsAcc = []        #Can be used to track the mass that falls onto the primary in a timestep
# Sat_M = []
# Sat_R = []
m_new = []
moons = []
vec = []
Sat_M = []          #mass of satellites
Sat_Rad = []        #Radius of satellites
Sat_r = []          #semi-major axis of satellites
Sat_r_default = []  #"default" semi-major axis for each satellite bin
Sat_v = []          #velocity of satellite
Sat_w = []          #angular speed of satellite
Sat_e = []          #eccentricity of satellite
X = []
S = []
rhill = []          #hill sphere of satellite
Torque_to_disk = [] #torque exerted onto disk by satellites
Sat_tstep = []      #stable timestep for satellite integration
Laplace_Coefficient = []
DLaplace_Coefficient = []
sigma_threshold = []    #threshold surface mass density that will push satellite beyond synchronous (created in Build.py)
