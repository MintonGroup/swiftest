# Add in the external dependency libraries 
IF (CMAKE_Fortran_COMPILER_ID MATCHES "^Intel")
    SET(COMPILER_OPTIONS "Intel" CACHE STRING "Compiler identified as Intel")
ELSEIF (CMAKE_Fortran_COMPILER_ID STREQUAL "GNU")
    SET(COMPILER_OPTIONS "GNU" CACHE STRING "Compiler identified as gfortran")
ELSE ()
    MESSAGE(FATAL_ERROR "Compiler ${CMAKE_Fortran_COMPILER_ID} not recognized!") 
ENDIF ()


IF (COMPILER_OPTIONS STREQUAL "GNU")
    IF (APPLE)
        SET(BLA_VENDOR "Apple" CACHE STRING "BLAS vendor")
    ELSE ()
        SET(BLA_VENDOR "OpenBLAS" CACHE STRING "BLAS vendor")
    ENDIF ()
ELSEIF (COMPILER_OPTIONS STREQUAL "INTEL")
    SET(BLA_VENDOR "Intel10_64lp" CACHE STRING "BLAS vendor")
ENDIF()
SET(BLA_STATIC ON)
FIND_PACKAGE(BLAS REQUIRED)
FIND_PACKAGE(LAPACK REQUIRED)
FIND_PACKAGE(FFTW3 REQUIRED)
FIND_PACKAGE(SHTOOLS REQUIRED)
IF (USE_COARRAY)
    MESSAGE(STATUS "Building with Coarray support")
    FIND_PACKAGE(Coarray_Fortran REQUIRED)
ELSE()
    MESSAGE(STATUS "Coarray support disabled")
ENDIF()

SET(HDF5_USE_STATIC_LIBRARIES ON CACHE BOOL "Use static libraries for HDF5")
SET(HDF5_PREFER_PARALLEL ON CACHE BOOL "Prefer parallel HDF5")

IF (MSVC)
    FIND_PACKAGE(HDF5 NAMES hdf5 COMPONENTS C HL REQUIRED CONFIG)
    MESSAGE(STATUS "HDF5_FOUND: ${HDF5_FOUND}")
    MESSAGE(STATUS "HDF5_VERSION: ${HDF5_VERSION}")
    MESSAGE(STATUS "HDF5_LIBRARIES: ${HDF5_LIBRARIES}")
    MESSAGE(STATUS "HDF5_INCLUDE_DIRS: ${HDF5_INCLUDE_DIRS}")
ELSE ()
    FIND_PACKAGE(HDF5 COMPONENTS C HL REQUIRED)
ENDIF ()
FIND_PACKAGE(NETCDF_Fortran REQUIRED)

INCLUDE(SetParallelizationLibrary)
